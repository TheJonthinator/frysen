name: Android Patch Release

on:
  push:
    branches:
      - master
    paths:
      - "android/**"
      - "capacitor.config.ts"
      - "src/**"
      - "package.json"
      - "package-lock.json"

jobs:
  android-patch:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: npm run build

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Build Android APK
        run: |
          npx cap sync android
          cd android
          ./gradlew assembleDebug

      - name: Read and bump version
        id: version
        run: |
          # Read current version and trim whitespace
          CURRENT_VERSION=$(cat version.txt | xargs)
          echo "Current version: '$CURRENT_VERSION'"

          # Split version into parts using awk for better reliability
          MAJOR=$(echo "$CURRENT_VERSION" | awk -F. '{print $1}')
          MINOR=$(echo "$CURRENT_VERSION" | awk -F. '{print $2}')
          PATCH=$(echo "$CURRENT_VERSION" | awk -F. '{print $3}')

          echo "Parsed: MAJOR=$MAJOR, MINOR=$MINOR, PATCH=$PATCH"

          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"

          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Update version file
          echo "$NEW_VERSION" > version.txt

      - name: Generate release notes
        id: release_notes
        run: |
          # Get commits since last tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [ -n "$LATEST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s" $LATEST_TAG..HEAD)
          else
            COMMITS=$(git log --pretty=format:"- %s" --reverse)
          fi

          # Create release notes
          RELEASE_NOTES="## Frysen v${{ steps.version.outputs.new_version }} (Android Patch)

          ### Changes in this release:

          $COMMITS

          ### Build Info:
          - Built on: $(date -u +"%Y-%m-%d %H:%M UTC")
          - Commit: ${{ github.sha }}
          - Branch: ${{ github.ref_name }}

          ### Downloads:
          - Web App: Built and ready for deployment
          - Android APK: Available for download below

          ### Installation:
          Download the APK and install it on your Android device. This will update your existing Frysen app."

          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create and push new tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add version.txt
          git commit -m "Bump version to ${{ steps.version.outputs.new_version }}"
          git tag -a "v${{ steps.version.outputs.new_version }}" -m "Release v${{ steps.version.outputs.new_version }}"
          git push origin master
          git push origin "v${{ steps.version.outputs.new_version }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.version.outputs.new_version }}"
          release_name: "Frysen v${{ steps.version.outputs.new_version }} (Android Patch)"
          body: ${{ steps.release_notes.outputs.release_notes }}
          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: frysen-v${{ steps.version.outputs.new_version }}-android-patch.apk
          asset_content_type: application/vnd.android.package-archive
